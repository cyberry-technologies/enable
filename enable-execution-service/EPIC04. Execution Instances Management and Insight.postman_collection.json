{
	"info": {
		"_postman_id": "2a36c9e3-183a-4793-a0de-b0b9e8aadc72",
		"name": "EPIC04. Execution Instances Management and Insight",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17538466"
	},
	"item": [
		{
			"name": "getExecutionsOfUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Execution list correctly retrieved\", () => {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    var responseBody = pm.response.json();",
							"",
							"    pm.expect(responseBody).to.be.an('array').that.has.lengthOf(1);",
							"",
							"    var execution1 = responseBody[0];",
							"",
							"    // Assert if id exists and is not null",
							"    pm.expect(execution1).to.have.property('id');",
							"    pm.expect(execution1.id).to.not.be.null;",
							"    ",
							"    // Assert if processFileId exists and is not null",
							"    pm.expect(execution1).to.have.property('processFileId');",
							"    pm.expect(execution1.processFileId).to.not.be.null;",
							"    ",
							"    // Assert if mainTaskId exists and is not null",
							"    pm.expect(execution1).to.have.property('mainTaskId');",
							"    pm.expect(execution1.mainTaskId).to.not.be.null;",
							"",
							"    // Assert if mainTask exists and id is mainTaskId",
							"    pm.expect(execution1).to.have.property('mainTask');",
							"    pm.expect(execution1.mainTask.id).to.equal(execution1.mainTaskId);",
							"",
							"    // Assert if mainTask.executionId exists and is saved executionId",
							"    pm.expect(execution1.mainTask).to.have.property('executionId');",
							"    pm.expect(execution1.mainTask.executionId).to.equal(execution1.id);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiGatewayBaseUrl}}/api/execution/user?userId={{userId}}",
					"host": [
						"{{apiGatewayBaseUrl}}"
					],
					"path": [
						"api",
						"execution",
						"user"
					],
					"query": [
						{
							"key": "userId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getExecutionsOfUser - check details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Execution list correctly retrieved\", () => {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    var responseBody = pm.response.json();",
							"",
							"    pm.expect(responseBody).to.be.an('array').that.has.lengthOf(1);",
							"",
							"    var execution1 = responseBody[0];",
							"",
							"    // Assert if execution has main task with correct data",
							"    pm.expect(execution1).to.have.property('mainTask');",
							"    pm.expect(execution1.mainTask).to.have.property('status');",
							"    pm.expect(execution1.mainTask.status).to.equal(0);",
							"    pm.expect(execution1.mainTask).to.have.property('concludedByUserId');",
							"    pm.expect(execution1.mainTask.concludedByUserId).to.equal(null);",
							"    pm.expect(execution1.mainTask).to.have.property('claimedByUserId');",
							"    pm.expect(execution1.mainTask.claimedByUserId).to.equal(null);",
							"",
							"    // Assert if main task has process with correct data",
							"    pm.expect(execution1.mainTask).to.have.property('process');",
							"    pm.expect(execution1.mainTask.process).to.have.property('name');",
							"    pm.expect(execution1.mainTask.process.name).to.equal(\"Test\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiGatewayBaseUrl}}/api/execution/user?userId={{userId}}",
					"host": [
						"{{apiGatewayBaseUrl}}"
					],
					"path": [
						"api",
						"execution",
						"user"
					],
					"query": [
						{
							"key": "userId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getExecution - check details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Execution with details correctly retrieved\", () => {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    var execution = pm.response.json();",
							"",
							"    // Assert if execution has main task with correct data",
							"    pm.expect(execution).to.have.property('mainTask');",
							"    pm.expect(execution.mainTask).to.have.property('status');",
							"    pm.expect(execution.mainTask.status).to.equal(0);",
							"    pm.expect(execution.mainTask).to.have.property('concludedByUserId');",
							"    pm.expect(execution.mainTask.concludedByUserId).to.equal(null);",
							"    pm.expect(execution.mainTask).to.have.property('claimedByUserId');",
							"    pm.expect(execution.mainTask.claimedByUserId).to.equal(null);",
							"",
							"    // Assert if main task has process with correct data",
							"    pm.expect(execution.mainTask).to.have.property('process');",
							"    pm.expect(execution.mainTask.process).to.have.property('name');",
							"    pm.expect(execution.mainTask.process.name).to.equal(\"Test\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiGatewayBaseUrl}}/api/execution?id={{executionId}}",
					"host": [
						"{{apiGatewayBaseUrl}}"
					],
					"path": [
						"api",
						"execution"
					],
					"query": [
						{
							"key": "id",
							"value": "{{executionId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "terminateExecution",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Execution with details correctly retrieved\", () => {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    var execution = pm.response.json();",
							"",
							"    // Assert if execution has main task with correct data",
							"    pm.expect(execution).to.have.property('mainTask');",
							"    pm.expect(execution.mainTask).to.have.property('status');",
							"    pm.expect(execution.mainTask.status).to.equal(4);",
							"    pm.expect(execution.mainTask).to.have.property('concludedByUserId');",
							"    pm.expect(execution.mainTask.concludedByUserId).to.equal(pm.environment.get('userId'));",
							"    pm.expect(execution.mainTask).to.have.property('claimedByUserId');",
							"    pm.expect(execution.mainTask.claimedByUserId).to.equal(null);",
							"",
							"    // Assert if main task has process with correct data",
							"    pm.expect(execution.mainTask).to.have.property('process');",
							"    pm.expect(execution.mainTask.process).to.have.property('name');",
							"    pm.expect(execution.mainTask.process.name).to.equal(\"Test\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{apiGatewayBaseUrl}}/api/execution/terminate?id={{executionId}}&userId={{userId}}",
					"host": [
						"{{apiGatewayBaseUrl}}"
					],
					"path": [
						"api",
						"execution",
						"terminate"
					],
					"query": [
						{
							"key": "id",
							"value": "{{executionId}}"
						},
						{
							"key": "userId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteExecution",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Execution with details correctly retrieved\", () => {",
							"    pm.response.to.have.status(200);",
							"",
							"    pm.expect(pm.response.json()).to.equal(true);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{apiGatewayBaseUrl}}/api/execution/delete?id={{executionId}}",
					"host": [
						"{{apiGatewayBaseUrl}}"
					],
					"path": [
						"api",
						"execution",
						"delete"
					],
					"query": [
						{
							"key": "id",
							"value": "{{executionId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getExecutionsOfUser - empty executions list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Empty execution list correctly retrieved\", () => {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    var responseBody = pm.response.json();",
							"",
							"    pm.expect(responseBody).to.be.an('array').that.has.lengthOf(0);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{apiGatewayBaseUrl}}/api/execution/user?userId={{userId}}",
					"host": [
						"{{apiGatewayBaseUrl}}"
					],
					"path": [
						"api",
						"execution",
						"user"
					],
					"query": [
						{
							"key": "userId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		}
	]
}